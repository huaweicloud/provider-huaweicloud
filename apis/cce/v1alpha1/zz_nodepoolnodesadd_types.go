// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NodeListInitParameters struct {

	// Specifies server ID.
	ServerID *string `json:"serverId,omitempty" tf:"server_id,omitempty"`
}

type NodeListObservation struct {

	// Specifies server ID.
	ServerID *string `json:"serverId,omitempty" tf:"server_id,omitempty"`
}

type NodeListParameters struct {

	// Specifies server ID.
	// +kubebuilder:validation:Optional
	ServerID *string `json:"serverId" tf:"server_id,omitempty"`
}

type NodePoolNodesAddInitParameters struct {

	// Specifies the cluster ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/cce/v1alpha1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a Cluster in cce to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in cce to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	EnableForceNew *string `json:"enableForceNew,omitempty" tf:"enable_force_new,omitempty"`

	// Specifies the list of nodes to add into the pool.
	// The node_list structure is documented below.
	NodeList []NodeListInitParameters `json:"nodeList,omitempty" tf:"node_list,omitempty"`

	// Specifies the node pool ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/cce/v1alpha1.NodePool
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	NodepoolID *string `json:"nodepoolId,omitempty" tf:"nodepool_id,omitempty"`

	// Reference to a NodePool in cce to populate nodepoolId.
	// +kubebuilder:validation:Optional
	NodepoolIDRef *v1.Reference `json:"nodepoolIdRef,omitempty" tf:"-"`

	// Selector for a NodePool in cce to populate nodepoolId.
	// +kubebuilder:validation:Optional
	NodepoolIDSelector *v1.Selector `json:"nodepoolIdSelector,omitempty" tf:"-"`

	// The region in which to create the CCE pool nodes add resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NodePoolNodesAddObservation struct {

	// Specifies the cluster ID.
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	EnableForceNew *string `json:"enableForceNew,omitempty" tf:"enable_force_new,omitempty"`

	// The resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the list of nodes to add into the pool.
	// The node_list structure is documented below.
	NodeList []NodeListObservation `json:"nodeList,omitempty" tf:"node_list,omitempty"`

	// Specifies the node pool ID.
	NodepoolID *string `json:"nodepoolId,omitempty" tf:"nodepool_id,omitempty"`

	// The region in which to create the CCE pool nodes add resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type NodePoolNodesAddParameters struct {

	// Specifies the cluster ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/cce/v1alpha1.Cluster
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ClusterID *string `json:"clusterId,omitempty" tf:"cluster_id,omitempty"`

	// Reference to a Cluster in cce to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDRef *v1.Reference `json:"clusterIdRef,omitempty" tf:"-"`

	// Selector for a Cluster in cce to populate clusterId.
	// +kubebuilder:validation:Optional
	ClusterIDSelector *v1.Selector `json:"clusterIdSelector,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	EnableForceNew *string `json:"enableForceNew,omitempty" tf:"enable_force_new,omitempty"`

	// Specifies the list of nodes to add into the pool.
	// The node_list structure is documented below.
	// +kubebuilder:validation:Optional
	NodeList []NodeListParameters `json:"nodeList,omitempty" tf:"node_list,omitempty"`

	// Specifies the node pool ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/cce/v1alpha1.NodePool
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	NodepoolID *string `json:"nodepoolId,omitempty" tf:"nodepool_id,omitempty"`

	// Reference to a NodePool in cce to populate nodepoolId.
	// +kubebuilder:validation:Optional
	NodepoolIDRef *v1.Reference `json:"nodepoolIdRef,omitempty" tf:"-"`

	// Selector for a NodePool in cce to populate nodepoolId.
	// +kubebuilder:validation:Optional
	NodepoolIDSelector *v1.Selector `json:"nodepoolIdSelector,omitempty" tf:"-"`

	// The region in which to create the CCE pool nodes add resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// NodePoolNodesAddSpec defines the desired state of NodePoolNodesAdd
type NodePoolNodesAddSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NodePoolNodesAddParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NodePoolNodesAddInitParameters `json:"initProvider,omitempty"`
}

// NodePoolNodesAddStatus defines the observed state of NodePoolNodesAdd.
type NodePoolNodesAddStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NodePoolNodesAddObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NodePoolNodesAdd is the Schema for the NodePoolNodesAdds API. Use this resource to add nodes into a node pool within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type NodePoolNodesAdd struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.nodeList) || (has(self.initProvider) && has(self.initProvider.nodeList))",message="spec.forProvider.nodeList is a required parameter"
	Spec   NodePoolNodesAddSpec   `json:"spec"`
	Status NodePoolNodesAddStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NodePoolNodesAddList contains a list of NodePoolNodesAdds
type NodePoolNodesAddList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NodePoolNodesAdd `json:"items"`
}

// Repository type metadata.
var (
	NodePoolNodesAdd_Kind             = "NodePoolNodesAdd"
	NodePoolNodesAdd_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NodePoolNodesAdd_Kind}.String()
	NodePoolNodesAdd_KindAPIVersion   = NodePoolNodesAdd_Kind + "." + CRDGroupVersion.String()
	NodePoolNodesAdd_GroupVersionKind = CRDGroupVersion.WithKind(NodePoolNodesAdd_Kind)
)

func init() {
	SchemeBuilder.Register(&NodePoolNodesAdd{}, &NodePoolNodesAddList{})
}
