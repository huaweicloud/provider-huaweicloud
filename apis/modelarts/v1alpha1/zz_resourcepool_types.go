// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AzsInitParameters struct {

	// Specifies the AZ name.
	// The AZ name.
	Az *string `json:"az,omitempty" tf:"az,omitempty"`

	// Specifies the number of resources of the corresponding flavors.
	// Number of nodes.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`
}

type AzsObservation struct {

	// Specifies the AZ name.
	// The AZ name.
	Az *string `json:"az,omitempty" tf:"az,omitempty"`

	// Specifies the number of resources of the corresponding flavors.
	// Number of nodes.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`
}

type AzsParameters struct {

	// Specifies the AZ name.
	// The AZ name.
	// +kubebuilder:validation:Optional
	Az *string `json:"az,omitempty" tf:"az,omitempty"`

	// Specifies the number of resources of the corresponding flavors.
	// Number of nodes.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`
}

type ClustersInitParameters struct {

	// Specifies the ID of the CCE cluster.
	// The ID of the CCE cluster.
	ProviderID *string `json:"providerId,omitempty" tf:"provider_id,omitempty"`
}

type ClustersObservation struct {

	// Indicates the name of the CCE cluster.
	// The name of the CCE cluster.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ID of the CCE cluster.
	// The ID of the CCE cluster.
	ProviderID *string `json:"providerId,omitempty" tf:"provider_id,omitempty"`
}

type ClustersParameters struct {

	// Specifies the ID of the CCE cluster.
	// The ID of the CCE cluster.
	// +kubebuilder:validation:Optional
	ProviderID *string `json:"providerId" tf:"provider_id,omitempty"`
}

type ResourcePoolInitParameters struct {

	// Specifies whether auto-renew is enabled. Valid values are true and false.
	AutoRenew *string `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Specifies the charging mode of the resource pool.
	// Valid values are prePaid and postPaid, defaults to postPaid.
	// Changing this parameter will create a new resource.
	ChargingMode *string `json:"chargingMode,omitempty" tf:"charging_mode,omitempty"`

	// Specifies the list of the CCE clusters. It is mandatory when vpc_id is
	// specified and can not be specified when network_id is specified.
	// The clusters structure is documented below.
	// The list of the CCE clusters.
	Clusters []ClustersInitParameters `json:"clusters,omitempty" tf:"clusters,omitempty"`

	// Specifies the description of the dedicated resource pool.
	// The description of the resource pool.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the name of the dedicated resource pool.
	// The name can contain 4 to 32 characters, only lowercase letters, digits and hyphens (-) are allowed.
	// The name must start with a lowercase letter and end with a lowercase letter or digit.
	// The name of the resource pool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ModelArt network ID of the resource pool.
	// The ModelArts network ID of the resource pool.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/modelarts/v1alpha1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in modelarts to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in modelarts to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// Specifies the charging period of the resource pool.
	// If period_unit is set to month, the value ranges from 1 to 9.
	// If period_unit is set to year, the value ranges from 1 to 3.
	// This parameter is mandatory if charging_mode is set to prePaid.
	// Changing this parameter will create a new resource.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Specifies the charging period unit of the resource pool.
	// Valid values are month and year. This parameter is mandatory if charging_mode is set to prePaid.
	// Changing this parameter will create a new resource.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// Specifies the prefix of the user-defined node name of the resource pool.
	// The prefix of the user-defined node name of the resource pool.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the list of resource specifications in the resource pool.
	// Including resource flavors and the number of resources of the corresponding flavors.
	// The resources structure is documented below.
	// List of resource specifications in the resource pool.
	Resources []ResourcesInitParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// Specifies the list of job types supported by the resource pool. It is mandatory when
	// network_id is specified and can not be specified when vpc_id is specified. The options are as follows:
	// List of job types supported by the resource pool.
	// +listType=set
	Scope []*string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Specifies the network ID of a subnet. It is mandatory when vpc_id is
	// specified.
	// The network ID of a subnet.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Specifies the user login info of the resource pool. It is mandatory when
	// vpc_id is specified and can not be specified when network_id is specified.
	// The user_login structure is documented below.
	// The user login info of the resource pool.
	UserLogin []UserLoginInitParameters `json:"userLogin,omitempty" tf:"user_login,omitempty"`

	// Specifies the VPC ID.
	// The VPC ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Specifies the workspace ID, which defaults to 0.
	// Workspace ID, which defaults to 0.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/modelarts/v1alpha1.Workspace
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	WorkspaceID *string `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`

	// Reference to a Workspace in modelarts to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDRef *v1.Reference `json:"workspaceIdRef,omitempty" tf:"-"`

	// Selector for a Workspace in modelarts to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDSelector *v1.Selector `json:"workspaceIdSelector,omitempty" tf:"-"`
}

type ResourcePoolObservation struct {

	// Specifies whether auto-renew is enabled. Valid values are true and false.
	AutoRenew *string `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Specifies the charging mode of the resource pool.
	// Valid values are prePaid and postPaid, defaults to postPaid.
	// Changing this parameter will create a new resource.
	ChargingMode *string `json:"chargingMode,omitempty" tf:"charging_mode,omitempty"`

	// Specifies the list of the CCE clusters. It is mandatory when vpc_id is
	// specified and can not be specified when network_id is specified.
	// The clusters structure is documented below.
	// The list of the CCE clusters.
	Clusters []ClustersObservation `json:"clusters,omitempty" tf:"clusters,omitempty"`

	// Specifies the description of the dedicated resource pool.
	// The description of the resource pool.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the name of the dedicated resource pool.
	// The name can contain 4 to 32 characters, only lowercase letters, digits and hyphens (-) are allowed.
	// The name must start with a lowercase letter and end with a lowercase letter or digit.
	// The name of the resource pool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ModelArt network ID of the resource pool.
	// The ModelArts network ID of the resource pool.
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Specifies the charging period of the resource pool.
	// If period_unit is set to month, the value ranges from 1 to 9.
	// If period_unit is set to year, the value ranges from 1 to 3.
	// This parameter is mandatory if charging_mode is set to prePaid.
	// Changing this parameter will create a new resource.
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Specifies the charging period unit of the resource pool.
	// Valid values are month and year. This parameter is mandatory if charging_mode is set to prePaid.
	// Changing this parameter will create a new resource.
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// Specifies the prefix of the user-defined node name of the resource pool.
	// The prefix of the user-defined node name of the resource pool.
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Indicates the resource ID of the resource pool.
	// The resource ID of the resource pool.
	ResourcePoolID *string `json:"resourcePoolId,omitempty" tf:"resource_pool_id,omitempty"`

	// Specifies the list of resource specifications in the resource pool.
	// Including resource flavors and the number of resources of the corresponding flavors.
	// The resources structure is documented below.
	// List of resource specifications in the resource pool.
	Resources []ResourcesObservation `json:"resources,omitempty" tf:"resources,omitempty"`

	// Specifies the list of job types supported by the resource pool. It is mandatory when
	// network_id is specified and can not be specified when vpc_id is specified. The options are as follows:
	// List of job types supported by the resource pool.
	// +listType=set
	Scope []*string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Indicates the status of the resource pool.
	// The status of the resource pool.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the network ID of a subnet. It is mandatory when vpc_id is
	// specified.
	// The network ID of a subnet.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the user login info of the resource pool. It is mandatory when
	// vpc_id is specified and can not be specified when network_id is specified.
	// The user_login structure is documented below.
	// The user login info of the resource pool.
	UserLogin []UserLoginObservation `json:"userLogin,omitempty" tf:"user_login,omitempty"`

	// Specifies the VPC ID.
	// The VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Specifies the workspace ID, which defaults to 0.
	// Workspace ID, which defaults to 0.
	WorkspaceID *string `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`
}

type ResourcePoolParameters struct {

	// Specifies whether auto-renew is enabled. Valid values are true and false.
	// +kubebuilder:validation:Optional
	AutoRenew *string `json:"autoRenew,omitempty" tf:"auto_renew,omitempty"`

	// Specifies the charging mode of the resource pool.
	// Valid values are prePaid and postPaid, defaults to postPaid.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	ChargingMode *string `json:"chargingMode,omitempty" tf:"charging_mode,omitempty"`

	// Specifies the list of the CCE clusters. It is mandatory when vpc_id is
	// specified and can not be specified when network_id is specified.
	// The clusters structure is documented below.
	// The list of the CCE clusters.
	// +kubebuilder:validation:Optional
	Clusters []ClustersParameters `json:"clusters,omitempty" tf:"clusters,omitempty"`

	// Specifies the description of the dedicated resource pool.
	// The description of the resource pool.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the name of the dedicated resource pool.
	// The name can contain 4 to 32 characters, only lowercase letters, digits and hyphens (-) are allowed.
	// The name must start with a lowercase letter and end with a lowercase letter or digit.
	// The name of the resource pool.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the ModelArt network ID of the resource pool.
	// The ModelArts network ID of the resource pool.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/modelarts/v1alpha1.Network
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	NetworkID *string `json:"networkId,omitempty" tf:"network_id,omitempty"`

	// Reference to a Network in modelarts to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDRef *v1.Reference `json:"networkIdRef,omitempty" tf:"-"`

	// Selector for a Network in modelarts to populate networkId.
	// +kubebuilder:validation:Optional
	NetworkIDSelector *v1.Selector `json:"networkIdSelector,omitempty" tf:"-"`

	// Specifies the charging period of the resource pool.
	// If period_unit is set to month, the value ranges from 1 to 9.
	// If period_unit is set to year, the value ranges from 1 to 3.
	// This parameter is mandatory if charging_mode is set to prePaid.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Period *float64 `json:"period,omitempty" tf:"period,omitempty"`

	// Specifies the charging period unit of the resource pool.
	// Valid values are month and year. This parameter is mandatory if charging_mode is set to prePaid.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	PeriodUnit *string `json:"periodUnit,omitempty" tf:"period_unit,omitempty"`

	// Specifies the prefix of the user-defined node name of the resource pool.
	// The prefix of the user-defined node name of the resource pool.
	// +kubebuilder:validation:Optional
	Prefix *string `json:"prefix,omitempty" tf:"prefix,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the list of resource specifications in the resource pool.
	// Including resource flavors and the number of resources of the corresponding flavors.
	// The resources structure is documented below.
	// List of resource specifications in the resource pool.
	// +kubebuilder:validation:Optional
	Resources []ResourcesParameters `json:"resources,omitempty" tf:"resources,omitempty"`

	// Specifies the list of job types supported by the resource pool. It is mandatory when
	// network_id is specified and can not be specified when vpc_id is specified. The options are as follows:
	// List of job types supported by the resource pool.
	// +kubebuilder:validation:Optional
	// +listType=set
	Scope []*string `json:"scope,omitempty" tf:"scope,omitempty"`

	// Specifies the network ID of a subnet. It is mandatory when vpc_id is
	// specified.
	// The network ID of a subnet.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Specifies the user login info of the resource pool. It is mandatory when
	// vpc_id is specified and can not be specified when network_id is specified.
	// The user_login structure is documented below.
	// The user login info of the resource pool.
	// +kubebuilder:validation:Optional
	UserLogin []UserLoginParameters `json:"userLogin,omitempty" tf:"user_login,omitempty"`

	// Specifies the VPC ID.
	// The VPC ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`

	// Specifies the workspace ID, which defaults to 0.
	// Workspace ID, which defaults to 0.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/modelarts/v1alpha1.Workspace
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	WorkspaceID *string `json:"workspaceId,omitempty" tf:"workspace_id,omitempty"`

	// Reference to a Workspace in modelarts to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDRef *v1.Reference `json:"workspaceIdRef,omitempty" tf:"-"`

	// Selector for a Workspace in modelarts to populate workspaceId.
	// +kubebuilder:validation:Optional
	WorkspaceIDSelector *v1.Selector `json:"workspaceIdSelector,omitempty" tf:"-"`
}

type ResourcesInitParameters struct {

	// Specifies the AZs for resource pool nodes.
	// The azs structure is documented below.
	// AZs for resource pool nodes.
	Azs []AzsInitParameters `json:"azs,omitempty" tf:"azs,omitempty"`

	// Specifies the number of resources of the corresponding flavors.
	// Number of resources of the corresponding flavors.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Specifies the resource flavor ID.
	// The resource flavor ID.
	FlavorID *string `json:"flavorId,omitempty" tf:"flavor_id,omitempty"`

	// Specifies the labels of resource pool nodes.
	// The labels of resource pool.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the max number of resources of the corresponding flavors.
	// The max number of resources of the corresponding flavors.
	MaxCount *float64 `json:"maxCount,omitempty" tf:"max_count,omitempty"`

	// Specifies the name of resource pool nodes. It can contain 1 to 50
	// characters, and should start with a letter and ending with a letter or digit, only lowercase letters, digits,
	// hyphens (-) are allowed, and cannot end with a hyphen (-).
	// The name of resource pool nodes.
	NodePool *string `json:"nodePool,omitempty" tf:"node_pool,omitempty"`

	// Specifies the script to be executed after security. The value should be a Base64
	// encoded string.
	// The script to be executed after security.
	PostInstall *string `json:"postInstall,omitempty" tf:"post_install,omitempty"`

	// Specifies the security group IDs. It can not be specified when network_id is
	// specified.
	// The security group IDs.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Specifies the network ID of a subnet. It is mandatory when
	// resources.security_group_idsis specified, and can not be specified when network_id is specified.
	// The network ID of a subnet.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the key/value pairs to associate with the resource pool. It can not be specified
	// when network_id is specified.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the taints added to nodes. It can not be specified when network_id is specified.
	// The taints structure is documented below.
	// The taints added to nodes.
	Taints []TaintsInitParameters `json:"taints,omitempty" tf:"taints,omitempty"`

	// Specifies the VPC ID. It is mandatory when resources.subnet_id,
	// resources.security_group_ids is specified, and can not be specified when network_id is specified.
	// The VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type ResourcesObservation struct {

	// Specifies the AZs for resource pool nodes.
	// The azs structure is documented below.
	// AZs for resource pool nodes.
	Azs []AzsObservation `json:"azs,omitempty" tf:"azs,omitempty"`

	// Specifies the number of resources of the corresponding flavors.
	// Number of resources of the corresponding flavors.
	Count *float64 `json:"count,omitempty" tf:"count,omitempty"`

	// Specifies the resource flavor ID.
	// The resource flavor ID.
	FlavorID *string `json:"flavorId,omitempty" tf:"flavor_id,omitempty"`

	// Specifies the labels of resource pool nodes.
	// The labels of resource pool.
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the max number of resources of the corresponding flavors.
	// The max number of resources of the corresponding flavors.
	MaxCount *float64 `json:"maxCount,omitempty" tf:"max_count,omitempty"`

	// Specifies the name of resource pool nodes. It can contain 1 to 50
	// characters, and should start with a letter and ending with a letter or digit, only lowercase letters, digits,
	// hyphens (-) are allowed, and cannot end with a hyphen (-).
	// The name of resource pool nodes.
	NodePool *string `json:"nodePool,omitempty" tf:"node_pool,omitempty"`

	// Specifies the script to be executed after security. The value should be a Base64
	// encoded string.
	// The script to be executed after security.
	PostInstall *string `json:"postInstall,omitempty" tf:"post_install,omitempty"`

	// Specifies the security group IDs. It can not be specified when network_id is
	// specified.
	// The security group IDs.
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Specifies the network ID of a subnet. It is mandatory when
	// resources.security_group_idsis specified, and can not be specified when network_id is specified.
	// The network ID of a subnet.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the key/value pairs to associate with the resource pool. It can not be specified
	// when network_id is specified.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the taints added to nodes. It can not be specified when network_id is specified.
	// The taints structure is documented below.
	// The taints added to nodes.
	Taints []TaintsObservation `json:"taints,omitempty" tf:"taints,omitempty"`

	// Specifies the VPC ID. It is mandatory when resources.subnet_id,
	// resources.security_group_ids is specified, and can not be specified when network_id is specified.
	// The VPC ID.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type ResourcesParameters struct {

	// Specifies the AZs for resource pool nodes.
	// The azs structure is documented below.
	// AZs for resource pool nodes.
	// +kubebuilder:validation:Optional
	Azs []AzsParameters `json:"azs,omitempty" tf:"azs,omitempty"`

	// Specifies the number of resources of the corresponding flavors.
	// Number of resources of the corresponding flavors.
	// +kubebuilder:validation:Optional
	Count *float64 `json:"count" tf:"count,omitempty"`

	// Specifies the resource flavor ID.
	// The resource flavor ID.
	// +kubebuilder:validation:Optional
	FlavorID *string `json:"flavorId" tf:"flavor_id,omitempty"`

	// Specifies the labels of resource pool nodes.
	// The labels of resource pool.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Labels map[string]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// Specifies the max number of resources of the corresponding flavors.
	// The max number of resources of the corresponding flavors.
	// +kubebuilder:validation:Optional
	MaxCount *float64 `json:"maxCount,omitempty" tf:"max_count,omitempty"`

	// Specifies the name of resource pool nodes. It can contain 1 to 50
	// characters, and should start with a letter and ending with a letter or digit, only lowercase letters, digits,
	// hyphens (-) are allowed, and cannot end with a hyphen (-).
	// The name of resource pool nodes.
	// +kubebuilder:validation:Optional
	NodePool *string `json:"nodePool,omitempty" tf:"node_pool,omitempty"`

	// Specifies the script to be executed after security. The value should be a Base64
	// encoded string.
	// The script to be executed after security.
	// +kubebuilder:validation:Optional
	PostInstall *string `json:"postInstall,omitempty" tf:"post_install,omitempty"`

	// Specifies the security group IDs. It can not be specified when network_id is
	// specified.
	// The security group IDs.
	// +kubebuilder:validation:Optional
	SecurityGroupIds []*string `json:"securityGroupIds,omitempty" tf:"security_group_ids,omitempty"`

	// Specifies the network ID of a subnet. It is mandatory when
	// resources.security_group_idsis specified, and can not be specified when network_id is specified.
	// The network ID of a subnet.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the key/value pairs to associate with the resource pool. It can not be specified
	// when network_id is specified.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// Specifies the taints added to nodes. It can not be specified when network_id is specified.
	// The taints structure is documented below.
	// The taints added to nodes.
	// +kubebuilder:validation:Optional
	Taints []TaintsParameters `json:"taints,omitempty" tf:"taints,omitempty"`

	// Specifies the VPC ID. It is mandatory when resources.subnet_id,
	// resources.security_group_ids is specified, and can not be specified when network_id is specified.
	// The VPC ID.
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type TaintsInitParameters struct {

	// Specifies the effect of the taint. Value options: NoSchedule, PreferNoSchedule,
	// NoExecute.
	// The effect of the taint.
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Specifies the key of the taint.
	// The key of the taint.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies the value of the taint.
	// The value of the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TaintsObservation struct {

	// Specifies the effect of the taint. Value options: NoSchedule, PreferNoSchedule,
	// NoExecute.
	// The effect of the taint.
	Effect *string `json:"effect,omitempty" tf:"effect,omitempty"`

	// Specifies the key of the taint.
	// The key of the taint.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// Specifies the value of the taint.
	// The value of the taint.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type TaintsParameters struct {

	// Specifies the effect of the taint. Value options: NoSchedule, PreferNoSchedule,
	// NoExecute.
	// The effect of the taint.
	// +kubebuilder:validation:Optional
	Effect *string `json:"effect" tf:"effect,omitempty"`

	// Specifies the key of the taint.
	// The key of the taint.
	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// Specifies the value of the taint.
	// The value of the taint.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type UserLoginInitParameters struct {

	// Specifies key pair name of the login user.
	// The key pair name of the login user.
	KeyPairName *string `json:"keyPairName,omitempty" tf:"key_pair_name,omitempty"`

	// Specifies the password of the login user. The value needs to be salted,
	// encrypted and base64 encoded. Default user is root.
	// The password of the login user.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`
}

type UserLoginObservation struct {

	// Specifies key pair name of the login user.
	// The key pair name of the login user.
	KeyPairName *string `json:"keyPairName,omitempty" tf:"key_pair_name,omitempty"`
}

type UserLoginParameters struct {

	// Specifies key pair name of the login user.
	// The key pair name of the login user.
	// +kubebuilder:validation:Optional
	KeyPairName *string `json:"keyPairName,omitempty" tf:"key_pair_name,omitempty"`

	// Specifies the password of the login user. The value needs to be salted,
	// encrypted and base64 encoded. Default user is root.
	// The password of the login user.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`
}

// ResourcePoolSpec defines the desired state of ResourcePool
type ResourcePoolSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ResourcePoolParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ResourcePoolInitParameters `json:"initProvider,omitempty"`
}

// ResourcePoolStatus defines the observed state of ResourcePool.
type ResourcePoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ResourcePoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ResourcePool is the Schema for the ResourcePools API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type ResourcePool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resources) || (has(self.initProvider) && has(self.initProvider.resources))",message="spec.forProvider.resources is a required parameter"
	Spec   ResourcePoolSpec   `json:"spec"`
	Status ResourcePoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResourcePoolList contains a list of ResourcePools
type ResourcePoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ResourcePool `json:"items"`
}

// Repository type metadata.
var (
	ResourcePool_Kind             = "ResourcePool"
	ResourcePool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ResourcePool_Kind}.String()
	ResourcePool_KindAPIVersion   = ResourcePool_Kind + "." + CRDGroupVersion.String()
	ResourcePool_GroupVersionKind = CRDGroupVersion.WithKind(ResourcePool_Kind)
)

func init() {
	SchemeBuilder.Register(&ResourcePool{}, &ResourcePoolList{})
}
