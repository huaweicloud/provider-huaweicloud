// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GrantsInitParameters struct {

	// IAM user ID.
	// User ID and username specify at least one. If both are specified, User ID is preferred.
	// IAM user ID.
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// IAM username.
	// IAM username.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type GrantsObservation struct {

	// IAM user ID.
	// User ID and username specify at least one. If both are specified, User ID is preferred.
	// IAM user ID.
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// IAM username.
	// IAM username.
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type GrantsParameters struct {

	// IAM user ID.
	// User ID and username specify at least one. If both are specified, User ID is preferred.
	// IAM user ID.
	// +kubebuilder:validation:Optional
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// IAM username.
	// IAM username.
	// +kubebuilder:validation:Optional
	UserName *string `json:"userName,omitempty" tf:"user_name,omitempty"`
}

type WorkspaceInitParameters struct {

	// Authorization type.
	// Value options are as follows:
	// Inference mode.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// The description of the workspace.
	// The description of the worksapce.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The enterprise project id of the workspace.
	// Value 0 indicates the default enterprise project.
	// The enterprise project id of the worksapce.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// List of authorized users.
	// It is mandatory when auth_type is internal.
	// The grants structure is documented below.
	// List of authorized users.
	Grants []GrantsInitParameters `json:"grants,omitempty" tf:"grants,omitempty"`

	// Workspace name, which consists of 4 to 64 characters.
	// Only chinese and english letters, digits, hyphens (-), and underscores (_) are allowed.
	// default is the name of the default workspace reserved by the system.
	// Workspace name, which consists of 4 to 64 characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type WorkspaceObservation struct {

	// Authorization type.
	// Value options are as follows:
	// Inference mode.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// The description of the workspace.
	// The description of the worksapce.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The enterprise project id of the workspace.
	// Value 0 indicates the default enterprise project.
	// The enterprise project id of the worksapce.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// List of authorized users.
	// It is mandatory when auth_type is internal.
	// The grants structure is documented below.
	// List of authorized users.
	Grants []GrantsObservation `json:"grants,omitempty" tf:"grants,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Workspace name, which consists of 4 to 64 characters.
	// Only chinese and english letters, digits, hyphens (-), and underscores (_) are allowed.
	// default is the name of the default workspace reserved by the system.
	// Workspace name, which consists of 4 to 64 characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Workspace status.
	// Valid values are CREATE_FAILED, NORMALL, DELETING and DELETE_FAILED.
	// Workspace status.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Status details.
	// If the deletion fails, you can check the reason through this field.
	// Status details.
	StatusInfo *string `json:"statusInfo,omitempty" tf:"status_info,omitempty"`
}

type WorkspaceParameters struct {

	// Authorization type.
	// Value options are as follows:
	// Inference mode.
	// +kubebuilder:validation:Optional
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// The description of the workspace.
	// The description of the worksapce.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The enterprise project id of the workspace.
	// Value 0 indicates the default enterprise project.
	// The enterprise project id of the worksapce.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// List of authorized users.
	// It is mandatory when auth_type is internal.
	// The grants structure is documented below.
	// List of authorized users.
	// +kubebuilder:validation:Optional
	Grants []GrantsParameters `json:"grants,omitempty" tf:"grants,omitempty"`

	// Workspace name, which consists of 4 to 64 characters.
	// Only chinese and english letters, digits, hyphens (-), and underscores (_) are allowed.
	// default is the name of the default workspace reserved by the system.
	// Workspace name, which consists of 4 to 64 characters.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// WorkspaceSpec defines the desired state of Workspace
type WorkspaceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WorkspaceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WorkspaceInitParameters `json:"initProvider,omitempty"`
}

// WorkspaceStatus defines the observed state of Workspace.
type WorkspaceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WorkspaceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Workspace is the Schema for the Workspaces API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type Workspace struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   WorkspaceSpec   `json:"spec"`
	Status WorkspaceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WorkspaceList contains a list of Workspaces
type WorkspaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Workspace `json:"items"`
}

// Repository type metadata.
var (
	Workspace_Kind             = "Workspace"
	Workspace_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Workspace_Kind}.String()
	Workspace_KindAPIVersion   = Workspace_Kind + "." + CRDGroupVersion.String()
	Workspace_GroupVersionKind = CRDGroupVersion.WithKind(Workspace_Kind)
)

func init() {
	SchemeBuilder.Register(&Workspace{}, &WorkspaceList{})
}
