---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: models.modelarts.huaweicloud.crossplane.io
spec:
  group: modelarts.huaweicloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - huaweicloud
    kind: Model
    listKind: ModelList
    plural: models
    singular: model
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Model is the Schema for the Models API. ""
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModelSpec defines the desired state of Model
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  dependencies:
                    description: |-
                      Package required for inference code and model.
                      If the package is read from the configuration file, this parameter can be left blank.
                      The Dependency structure is documented below.
                      Package required for inference code and model.
                    items:
                      properties:
                        installer:
                          description: |-
                            Installation mode. Only pip is supported.
                            Changing this parameter will create a new resource.
                            Installation mode. Only **pip** is supported.
                          type: string
                        packages:
                          description: |-
                            Collection of dependency packages.
                            The package structure is documented below.
                            Changing this parameter will create a new resource.
                            Collection of dependency packages.
                          items:
                            properties:
                              packageName:
                                description: |-
                                  Name of a dependency package.
                                  Ensure that the package name is correct and available.
                                  Chinese characters and special characters (&!'"<>=) are not allowed.
                                  Changing this parameter will create a new resource.
                                  Name of a dependency package.
                                type: string
                              packageVersion:
                                description: |-
                                  Version of a dependency package.
                                  If this parameter is left blank, the latest version is installed by default.
                                  Chinese characters and special characters (&!'"<>=) are not allowed.
                                  Changing this parameter will create a new resource.
                                  Version of a dependency package.
                                type: string
                              restraint:
                                description: |-
                                  Version restriction, which can be EXACT, ATLEAST, or ATMOST.
                                  This parameter is mandatory only when package_version is available.
                                  Changing this parameter will create a new resource.
                                  Version restriction, which can be **EXACT**, **ATLEAST**, or **ATMOST**.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: |-
                      Model description that consists of 1 to 100 characters.
                      The following special characters cannot be contained: &!'"<>=.
                      Model description that consists of 1 to 100 characters.
                    type: string
                  executionCode:
                    description: |-
                      OBS path for storing the execution code.
                      The name of the execution code file is consistently to be customize_service.py.
                      The inference code file must be stored in the model directory.
                      This parameter can be left blank. Then, the system will automatically identify the inference
                      code in the model directory.
                      OBS path for storing the execution code.
                    type: string
                  initialConfig:
                    description: |-
                      The model configuration file describes the model usage,
                      computing framework, precision, inference code dependency package, and model API.
                      The fields such as model_algorithm, model_type, runtime, swr_location, metrics, apis,
                      dependencies, and health in the configuration file config.json.
                      For details, see Specifications for Writing the Model Configuration File
                      The model configuration file.
                    type: string
                  installType:
                    description: |-
                      Deployment type. Only lowercase letters are supported.
                      The value can be real-time, edge, or batch. Default value: [real-time, edge, batch].
                      Deployment type. Only lowercase letters are supported.
                    items:
                      type: string
                    type: array
                  metrics:
                    description: |-
                      Model precision.
                      If the value is read from the configuration file, this parameter can be left blank.
                      Model precision.
                    type: string
                  modelAlgorithm:
                    description: |-
                      Model algorithm.
                      If the algorithm is read from the configuration file, this parameter can be left blank.
                      The value can be predict_analysis, object_detection, image_classification, or unknown_algorithm.
                      Model algorithm.
                    type: string
                  modelDocs:
                    description: |-
                      List of model description documents. A maximum of three documents are supported.
                      List of model description documents. A maximum of three documents are supported.
                    items:
                      properties:
                        docName:
                          description: |-
                            Document name, which must start with a letter. Enter 1 to 48 characters.
                            Only letters, digits, hyphens (-), and underscores (_) are allowed.
                            Changing this parameter will create a new resource.
                            Document name, which must start with a letter. Enter 1 to 48 characters.
                          type: string
                        docUrl:
                          description: |-
                            HTTP(S) link of the document.
                            Changing this parameter will create a new resource.
                            HTTP(S) link of the document.
                          type: string
                      type: object
                    type: array
                  modelType:
                    description: |-
                      Model type.
                      It can be TensorFlow, MXNet, Caffe, Spark_MLlib, Scikit_Learn,
                      XGBoost, Image, PyTorch, or Template read from the configuration file.
                      Model type.
                    type: string
                  name:
                    description: |-
                      Model name, which consists of 1 to 64 characters.
                      Only letters, digits, hyphens (-), and underscores (_) are allowed.
                      Model name, which consists of 1 to 64 characters.
                    type: string
                  region:
                    description: |-
                      Specifies the region in which to create the resource.
                      If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
                    type: string
                  runtime:
                    description: |-
                      Model runtime environment.
                      Its possible values are determined based on model_type.
                      For details, see Supported AI engines and their runtime
                      Model runtime environment.
                    type: string
                  sourceCopy:
                    description: |-
                      Whether to enable image replication.
                      This parameter is valid only when model_type is set to Image.
                      Value options are as follows:
                      Whether to enable image replication.
                    type: string
                  sourceJobId:
                    description: |-
                      ID of the source training job.
                      If the model is generated from a training job, input this parameter for source tracing.
                      If the model is imported from a third-party meta model, leave this parameter blank.
                      ID of the source training job.
                    type: string
                  sourceJobVersion:
                    description: |-
                      Version of the source training job.
                      If the model is generated from a training job, input this parameter for source tracing.
                      If the model is imported from a third-party meta model, leave this parameter blank.
                      Version of the source training job.
                    type: string
                  sourceLocation:
                    description: |-
                      OBS path where the model is located or the SWR image location.
                      OBS path where the model is located or the SWR image location.
                    type: string
                  sourceType:
                    description: |-
                      Model source type, which can only be auto,
                      indicating an ExeML model (model download is not allowed).
                      If the model is obtained from a training job, leave this parameter blank.
                      Model source type
                    type: string
                  template:
                    description: |-
                      Configuration items in a template.
                      This parameter is mandatory when model_type is set to Template.
                    items:
                      properties:
                        inferFormat:
                          description: |-
                            ID of the input and output mode.
                            When this parameter is used, the input and output mode built in the template does not take effect.
                            Changing this parameter will create a new resource.
                            ID of the input and output mode.
                          type: string
                        templateId:
                          description: |-
                            ID of the used template.
                            The template has a built-in input and output mode.
                            Changing this parameter will create a new resource.
                            ID of the used template.
                          type: string
                        templateInputs:
                          description: |-
                            Template input configuration,
                            specifying the source path for configuring a model.
                            The TemplateInput structure is documented below.
                            Changing this parameter will create a new resource.
                            Template input configuration, specifying the source path for configuring a model.
                          items:
                            properties:
                              input:
                                description: |-
                                  Template input path, which can be a path to an OBS file or directory.
                                  When you use a template with multiple input items to create a model,
                                  if the target paths input_properties specified in the template are the same,
                                  the OBS directory or OBS file name entered here must be unique to prevent files from being overwritten.
                                  Changing this parameter will create a new resource.
                                  Template input path, which can be a path to an OBS file or directory.
                                type: string
                              inputId:
                                description: |-
                                  Input item ID, which is obtained from template details.
                                  Changing this parameter will create a new resource.
                                  Input item ID, which is obtained from template details.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  version:
                    description: |-
                      Model version in the format of Digit.Digit.Digit.
                      Each digit is a one-digit or two-digit positive integer, but cannot start with 0.
                      For example, 01.01.01 is not allowed.
                      Model version in the format of Digit.Digit.Digit.
                    type: string
                  workspaceId:
                    description: |-
                      Workspace ID, which defaults to 0.
                      Workspace ID, which defaults to 0.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  dependencies:
                    description: |-
                      Package required for inference code and model.
                      If the package is read from the configuration file, this parameter can be left blank.
                      The Dependency structure is documented below.
                      Package required for inference code and model.
                    items:
                      properties:
                        installer:
                          description: |-
                            Installation mode. Only pip is supported.
                            Changing this parameter will create a new resource.
                            Installation mode. Only **pip** is supported.
                          type: string
                        packages:
                          description: |-
                            Collection of dependency packages.
                            The package structure is documented below.
                            Changing this parameter will create a new resource.
                            Collection of dependency packages.
                          items:
                            properties:
                              packageName:
                                description: |-
                                  Name of a dependency package.
                                  Ensure that the package name is correct and available.
                                  Chinese characters and special characters (&!'"<>=) are not allowed.
                                  Changing this parameter will create a new resource.
                                  Name of a dependency package.
                                type: string
                              packageVersion:
                                description: |-
                                  Version of a dependency package.
                                  If this parameter is left blank, the latest version is installed by default.
                                  Chinese characters and special characters (&!'"<>=) are not allowed.
                                  Changing this parameter will create a new resource.
                                  Version of a dependency package.
                                type: string
                              restraint:
                                description: |-
                                  Version restriction, which can be EXACT, ATLEAST, or ATMOST.
                                  This parameter is mandatory only when package_version is available.
                                  Changing this parameter will create a new resource.
                                  Version restriction, which can be **EXACT**, **ATLEAST**, or **ATMOST**.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: |-
                      Model description that consists of 1 to 100 characters.
                      The following special characters cannot be contained: &!'"<>=.
                      Model description that consists of 1 to 100 characters.
                    type: string
                  executionCode:
                    description: |-
                      OBS path for storing the execution code.
                      The name of the execution code file is consistently to be customize_service.py.
                      The inference code file must be stored in the model directory.
                      This parameter can be left blank. Then, the system will automatically identify the inference
                      code in the model directory.
                      OBS path for storing the execution code.
                    type: string
                  initialConfig:
                    description: |-
                      The model configuration file describes the model usage,
                      computing framework, precision, inference code dependency package, and model API.
                      The fields such as model_algorithm, model_type, runtime, swr_location, metrics, apis,
                      dependencies, and health in the configuration file config.json.
                      For details, see Specifications for Writing the Model Configuration File
                      The model configuration file.
                    type: string
                  installType:
                    description: |-
                      Deployment type. Only lowercase letters are supported.
                      The value can be real-time, edge, or batch. Default value: [real-time, edge, batch].
                      Deployment type. Only lowercase letters are supported.
                    items:
                      type: string
                    type: array
                  metrics:
                    description: |-
                      Model precision.
                      If the value is read from the configuration file, this parameter can be left blank.
                      Model precision.
                    type: string
                  modelAlgorithm:
                    description: |-
                      Model algorithm.
                      If the algorithm is read from the configuration file, this parameter can be left blank.
                      The value can be predict_analysis, object_detection, image_classification, or unknown_algorithm.
                      Model algorithm.
                    type: string
                  modelDocs:
                    description: |-
                      List of model description documents. A maximum of three documents are supported.
                      List of model description documents. A maximum of three documents are supported.
                    items:
                      properties:
                        docName:
                          description: |-
                            Document name, which must start with a letter. Enter 1 to 48 characters.
                            Only letters, digits, hyphens (-), and underscores (_) are allowed.
                            Changing this parameter will create a new resource.
                            Document name, which must start with a letter. Enter 1 to 48 characters.
                          type: string
                        docUrl:
                          description: |-
                            HTTP(S) link of the document.
                            Changing this parameter will create a new resource.
                            HTTP(S) link of the document.
                          type: string
                      type: object
                    type: array
                  modelType:
                    description: |-
                      Model type.
                      It can be TensorFlow, MXNet, Caffe, Spark_MLlib, Scikit_Learn,
                      XGBoost, Image, PyTorch, or Template read from the configuration file.
                      Model type.
                    type: string
                  name:
                    description: |-
                      Model name, which consists of 1 to 64 characters.
                      Only letters, digits, hyphens (-), and underscores (_) are allowed.
                      Model name, which consists of 1 to 64 characters.
                    type: string
                  region:
                    description: |-
                      Specifies the region in which to create the resource.
                      If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
                    type: string
                  runtime:
                    description: |-
                      Model runtime environment.
                      Its possible values are determined based on model_type.
                      For details, see Supported AI engines and their runtime
                      Model runtime environment.
                    type: string
                  sourceCopy:
                    description: |-
                      Whether to enable image replication.
                      This parameter is valid only when model_type is set to Image.
                      Value options are as follows:
                      Whether to enable image replication.
                    type: string
                  sourceJobId:
                    description: |-
                      ID of the source training job.
                      If the model is generated from a training job, input this parameter for source tracing.
                      If the model is imported from a third-party meta model, leave this parameter blank.
                      ID of the source training job.
                    type: string
                  sourceJobVersion:
                    description: |-
                      Version of the source training job.
                      If the model is generated from a training job, input this parameter for source tracing.
                      If the model is imported from a third-party meta model, leave this parameter blank.
                      Version of the source training job.
                    type: string
                  sourceLocation:
                    description: |-
                      OBS path where the model is located or the SWR image location.
                      OBS path where the model is located or the SWR image location.
                    type: string
                  sourceType:
                    description: |-
                      Model source type, which can only be auto,
                      indicating an ExeML model (model download is not allowed).
                      If the model is obtained from a training job, leave this parameter blank.
                      Model source type
                    type: string
                  template:
                    description: |-
                      Configuration items in a template.
                      This parameter is mandatory when model_type is set to Template.
                    items:
                      properties:
                        inferFormat:
                          description: |-
                            ID of the input and output mode.
                            When this parameter is used, the input and output mode built in the template does not take effect.
                            Changing this parameter will create a new resource.
                            ID of the input and output mode.
                          type: string
                        templateId:
                          description: |-
                            ID of the used template.
                            The template has a built-in input and output mode.
                            Changing this parameter will create a new resource.
                            ID of the used template.
                          type: string
                        templateInputs:
                          description: |-
                            Template input configuration,
                            specifying the source path for configuring a model.
                            The TemplateInput structure is documented below.
                            Changing this parameter will create a new resource.
                            Template input configuration, specifying the source path for configuring a model.
                          items:
                            properties:
                              input:
                                description: |-
                                  Template input path, which can be a path to an OBS file or directory.
                                  When you use a template with multiple input items to create a model,
                                  if the target paths input_properties specified in the template are the same,
                                  the OBS directory or OBS file name entered here must be unique to prevent files from being overwritten.
                                  Changing this parameter will create a new resource.
                                  Template input path, which can be a path to an OBS file or directory.
                                type: string
                              inputId:
                                description: |-
                                  Input item ID, which is obtained from template details.
                                  Changing this parameter will create a new resource.
                                  Input item ID, which is obtained from template details.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  version:
                    description: |-
                      Model version in the format of Digit.Digit.Digit.
                      Each digit is a one-digit or two-digit positive integer, but cannot start with 0.
                      For example, 01.01.01 is not allowed.
                      Model version in the format of Digit.Digit.Digit.
                    type: string
                  workspaceId:
                    description: |-
                      Workspace ID, which defaults to 0.
                      Workspace ID, which defaults to 0.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.modelType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.modelType)
                || (has(self.initProvider) && has(self.initProvider.modelType))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.sourceLocation is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.sourceLocation)
                || (has(self.initProvider) && has(self.initProvider.sourceLocation))'
            - message: spec.forProvider.version is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.version)
                || (has(self.initProvider) && has(self.initProvider.version))'
          status:
            description: ModelStatus defines the observed state of Model.
            properties:
              atProvider:
                properties:
                  dependencies:
                    description: |-
                      Package required for inference code and model.
                      If the package is read from the configuration file, this parameter can be left blank.
                      The Dependency structure is documented below.
                      Package required for inference code and model.
                    items:
                      properties:
                        installer:
                          description: |-
                            Installation mode. Only pip is supported.
                            Changing this parameter will create a new resource.
                            Installation mode. Only **pip** is supported.
                          type: string
                        packages:
                          description: |-
                            Collection of dependency packages.
                            The package structure is documented below.
                            Changing this parameter will create a new resource.
                            Collection of dependency packages.
                          items:
                            properties:
                              packageName:
                                description: |-
                                  Name of a dependency package.
                                  Ensure that the package name is correct and available.
                                  Chinese characters and special characters (&!'"<>=) are not allowed.
                                  Changing this parameter will create a new resource.
                                  Name of a dependency package.
                                type: string
                              packageVersion:
                                description: |-
                                  Version of a dependency package.
                                  If this parameter is left blank, the latest version is installed by default.
                                  Chinese characters and special characters (&!'"<>=) are not allowed.
                                  Changing this parameter will create a new resource.
                                  Version of a dependency package.
                                type: string
                              restraint:
                                description: |-
                                  Version restriction, which can be EXACT, ATLEAST, or ATMOST.
                                  This parameter is mandatory only when package_version is available.
                                  Changing this parameter will create a new resource.
                                  Version restriction, which can be **EXACT**, **ATLEAST**, or **ATMOST**.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: |-
                      Model description that consists of 1 to 100 characters.
                      The following special characters cannot be contained: &!'"<>=.
                      Model description that consists of 1 to 100 characters.
                    type: string
                  executionCode:
                    description: |-
                      OBS path for storing the execution code.
                      The name of the execution code file is consistently to be customize_service.py.
                      The inference code file must be stored in the model directory.
                      This parameter can be left blank. Then, the system will automatically identify the inference
                      code in the model directory.
                      OBS path for storing the execution code.
                    type: string
                  id:
                    description: The resource ID.
                    type: string
                  imageAddress:
                    description: |-
                      Image path generated after model packaging.
                      Image path generated after model packaging.
                    type: string
                  initialConfig:
                    description: |-
                      The model configuration file describes the model usage,
                      computing framework, precision, inference code dependency package, and model API.
                      The fields such as model_algorithm, model_type, runtime, swr_location, metrics, apis,
                      dependencies, and health in the configuration file config.json.
                      For details, see Specifications for Writing the Model Configuration File
                      The model configuration file.
                    type: string
                  installType:
                    description: |-
                      Deployment type. Only lowercase letters are supported.
                      The value can be real-time, edge, or batch. Default value: [real-time, edge, batch].
                      Deployment type. Only lowercase letters are supported.
                    items:
                      type: string
                    type: array
                  marketFlag:
                    description: |-
                      Whether a model is subscribed from AI Gallery.
                      Whether a model is subscribed from AI Gallery.
                    type: boolean
                  metrics:
                    description: |-
                      Model precision.
                      If the value is read from the configuration file, this parameter can be left blank.
                      Model precision.
                    type: string
                  modelAlgorithm:
                    description: |-
                      Model algorithm.
                      If the algorithm is read from the configuration file, this parameter can be left blank.
                      The value can be predict_analysis, object_detection, image_classification, or unknown_algorithm.
                      Model algorithm.
                    type: string
                  modelDocs:
                    description: |-
                      List of model description documents. A maximum of three documents are supported.
                      List of model description documents. A maximum of three documents are supported.
                    items:
                      properties:
                        docName:
                          description: |-
                            Document name, which must start with a letter. Enter 1 to 48 characters.
                            Only letters, digits, hyphens (-), and underscores (_) are allowed.
                            Changing this parameter will create a new resource.
                            Document name, which must start with a letter. Enter 1 to 48 characters.
                          type: string
                        docUrl:
                          description: |-
                            HTTP(S) link of the document.
                            Changing this parameter will create a new resource.
                            HTTP(S) link of the document.
                          type: string
                      type: object
                    type: array
                  modelSize:
                    description: |-
                      Model size, in bytes.
                      Model size, in bytes.
                    type: number
                  modelSource:
                    description: |-
                      Model source.
                      Value options are as follows:
                      Model source.
                    type: string
                  modelType:
                    description: |-
                      Model type.
                      It can be TensorFlow, MXNet, Caffe, Spark_MLlib, Scikit_Learn,
                      XGBoost, Image, PyTorch, or Template read from the configuration file.
                      Model type.
                    type: string
                  name:
                    description: |-
                      Model name, which consists of 1 to 64 characters.
                      Only letters, digits, hyphens (-), and underscores (_) are allowed.
                      Model name, which consists of 1 to 64 characters.
                    type: string
                  publishableFlag:
                    description: |-
                      Whether a model is subscribed from AI Gallery.
                      Whether a model is subscribed from AI Gallery.
                    type: boolean
                  region:
                    description: |-
                      Specifies the region in which to create the resource.
                      If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
                    type: string
                  runtime:
                    description: |-
                      Model runtime environment.
                      Its possible values are determined based on model_type.
                      For details, see Supported AI engines and their runtime
                      Model runtime environment.
                    type: string
                  schemaDoc:
                    description: |-
                      Download address of the model schema file.
                      Download address of the model schema file.
                    type: string
                  sourceCopy:
                    description: |-
                      Whether to enable image replication.
                      This parameter is valid only when model_type is set to Image.
                      Value options are as follows:
                      Whether to enable image replication.
                    type: string
                  sourceJobId:
                    description: |-
                      ID of the source training job.
                      If the model is generated from a training job, input this parameter for source tracing.
                      If the model is imported from a third-party meta model, leave this parameter blank.
                      ID of the source training job.
                    type: string
                  sourceJobVersion:
                    description: |-
                      Version of the source training job.
                      If the model is generated from a training job, input this parameter for source tracing.
                      If the model is imported from a third-party meta model, leave this parameter blank.
                      Version of the source training job.
                    type: string
                  sourceLocation:
                    description: |-
                      OBS path where the model is located or the SWR image location.
                      OBS path where the model is located or the SWR image location.
                    type: string
                  sourceType:
                    description: |-
                      Model source type, which can only be auto,
                      indicating an ExeML model (model download is not allowed).
                      If the model is obtained from a training job, leave this parameter blank.
                      Model source type
                    type: string
                  status:
                    description: |-
                      Model status.
                      Model status.
                    type: string
                  template:
                    description: |-
                      Configuration items in a template.
                      This parameter is mandatory when model_type is set to Template.
                    items:
                      properties:
                        inferFormat:
                          description: |-
                            ID of the input and output mode.
                            When this parameter is used, the input and output mode built in the template does not take effect.
                            Changing this parameter will create a new resource.
                            ID of the input and output mode.
                          type: string
                        templateId:
                          description: |-
                            ID of the used template.
                            The template has a built-in input and output mode.
                            Changing this parameter will create a new resource.
                            ID of the used template.
                          type: string
                        templateInputs:
                          description: |-
                            Template input configuration,
                            specifying the source path for configuring a model.
                            The TemplateInput structure is documented below.
                            Changing this parameter will create a new resource.
                            Template input configuration, specifying the source path for configuring a model.
                          items:
                            properties:
                              input:
                                description: |-
                                  Template input path, which can be a path to an OBS file or directory.
                                  When you use a template with multiple input items to create a model,
                                  if the target paths input_properties specified in the template are the same,
                                  the OBS directory or OBS file name entered here must be unique to prevent files from being overwritten.
                                  Changing this parameter will create a new resource.
                                  Template input path, which can be a path to an OBS file or directory.
                                type: string
                              inputId:
                                description: |-
                                  Input item ID, which is obtained from template details.
                                  Changing this parameter will create a new resource.
                                  Input item ID, which is obtained from template details.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  tunable:
                    description: |-
                      Whether a model can be tuned.
                      Whether a model can be tuned.
                    type: boolean
                  version:
                    description: |-
                      Model version in the format of Digit.Digit.Digit.
                      Each digit is a one-digit or two-digit positive integer, but cannot start with 0.
                      For example, 01.01.01 is not allowed.
                      Model version in the format of Digit.Digit.Digit.
                    type: string
                  workspaceId:
                    description: |-
                      Workspace ID, which defaults to 0.
                      Workspace ID, which defaults to 0.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
